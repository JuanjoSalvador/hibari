- const production = htmlWebpackPlugin.options.production
- const serviceWorker = htmlWebpackPlugin.options.serviceWorker

doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport' content='width=device-width, initial-scale=1')
    // Bing Webmasters
    meta(name='google-site-verification' content='R7UrSu_kLsPsRjilxAQsOMlNyMHLjqyRvuLg2nAZ9Fs')
    // Netlify Prerendering
    meta(name='fragment' content='!')
    if production
      meta(http-equiv='Content-Security-Policy' content='upgrade-insecure-requests')
    title Hibari
  body
    #app
    noscript Please enable JavaScript to use Hibari.
    if production
      script(type='text/javascript').
        (() => {
          'use strict'
          window.addEventListener('load', () => {
            if ('serviceWorker' in navigator &&
                (window.location.protocol === 'https:')) {
              navigator.serviceWorker.register('#{serviceWorker}')
              .then(register => {
                // updatefound is fired if service-worker.js changes.
                register.onupdatefound = () => {
                  // updatefound is also fired the very first time the SW is installed,
                  // and there's no need to prompt for a reload at that point.
                  // So check here to see if the page is already controlled,
                  // i.e. whether there's an existing service worker.
                  if (navigator.serviceWorker.controller) {
                    // The updatefound event implies that registration.installing is set
                    const install = register.installing
                    install.onstatechange = function() {
                      switch (install.state) {
                        case 'installed':
                          // At this point, the old content will have been purged and the
                          // fresh content will have been added to the cache.
                          // It's the perfect time to display a "New content is
                          // available; please refresh." message in the page's interface.
                          break
                        case 'redundant':
                          throw new Error('Service worker is redundant.')
                      }
                    }
                  }
                }
              }).catch(function(e) {
                console.error('Error during service worker registration:', e)
              })
            }
          })
        })()
      script(type='text/javascript' src='/'+serviceWorker)
    else
      p(style='pointer-events:none;position:fixed;left:1rem;bottom:.75rem;z-index:999999') Development Build
